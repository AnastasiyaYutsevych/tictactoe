{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","id","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","document","getElementById","style","backgroundColor","ReactDOM","render"],"mappings":"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","file":"static/js/main.4bd80647.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square (props){\r\n    return (\r\n        <button \r\n          className=\"square\"\r\n          onClick={props.onClick}\r\n          id = {props.id}>\r\n          {props.value}\r\n        </button>\r\n      );\r\n    }\r\n\r\n\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n      return (\r\n      <Square \r\n      value={this.props.squares[i]} \r\n      onClick = {()=> this.props.onClick(i)}\r\n      id = {i}\r\n      />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nclass Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares:Array(9).fill(null)\r\n        }],\r\n        stepNumber:0,\r\n        xIsNext:true\r\n      }\r\n    }\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length-1];\r\n      const squares = current.squares.slice();\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        history:history.concat([\r\n          {\r\n          squares:squares,\r\n          }\r\n       ]),\r\n        stepNumber:history.length,\r\n        xIsNext:!this.state.xIsNext,\r\n        \r\n        \r\n      });\r\n    }\r\n    jumpTo(step){\r\n      this.setState({\r\n         stepNumber:step,\r\n         xIsNext:(step%2)===0,\r\n       })\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n      const moves = history.map((step,move)=>{\r\n        const desc= move?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key = {move}>\r\n          <button className = \"moves\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n      let status;\r\n      if (winner) {\r\n        status = 'Winner: ' + winner;\r\n      } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            squares={current.squares}\r\n            onClick= {i=> this.handleClick(i)}\r\n              />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div className = \"status\">{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        document.getElementById(a).style.backgroundColor = \"#b0d400\";\r\n        document.getElementById(b).style.backgroundColor = \"#b0d400\";\r\n        document.getElementById(c).style.backgroundColor = \"#b0d400\";\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  "],"sourceRoot":""}